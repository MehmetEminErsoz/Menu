// <auto-generated />
using System;
using Menu.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Menu.DataAccess.Migrations
{
    [DbContext(typeof(MenuDbContext))]
    [Migration("20220309090040_PersonTableRenew")]
    partial class PersonTableRenew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Menu.Entities.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adressline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdState")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdState");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("Menu.Entities.Adress_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAdress")
                        .HasColumnType("int");

                    b.Property<int?>("IdAdressType")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdAdress");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdPerson");

                    b.ToTable("Adress_C");
                });

            modelBuilder.Entity("Menu.Entities.AdressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdressType");
                });

            modelBuilder.Entity("Menu.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<int?>("IdDesk")
                        .HasColumnType("int");

                    b.Property<int?>("IdPaymentMethod")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdDesk");

                    b.HasIndex("IdPaymentMethod");

                    b.HasIndex("IdUser");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Menu.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Menu.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCountry")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCountry");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Menu.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Menu.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("CountryNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Menu.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.Property<string>("IpAdress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdPerson");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Menu.Entities.Desk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeskCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("Desk");
                });

            modelBuilder.Entity("Menu.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Menu.Entities.MenuPackageProduct_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int?>("IdPackage")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdPackage");

                    b.HasIndex("IdProduct");

                    b.ToTable("MenuPackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBill")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderTaker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Menu.Entities.OrderPackageProduct_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdMenuPackageProduct_C")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuPackageProduct_CId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.HasIndex("MenuPackageProduct_CId");

                    b.ToTable("OrderPackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int>("IdPackageIngredient")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdSubCategory");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("Menu.Entities.PackageProduct_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPackage")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("Piece")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdPackage");

                    b.HasIndex("IdProduct");

                    b.ToTable("PackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Menu.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("AccessFailedCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Menu.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdSubCategory");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Menu.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Menu.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCity");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Menu.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("Menu.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordAnswer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordQuestion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("SecondMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPerson");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Menu.Entities.UserCompany_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int?>("IdRole")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUser");

                    b.ToTable("UserCompany_C");
                });

            modelBuilder.Entity("Menu.Entities.Adress", b =>
                {
                    b.HasOne("Menu.Entities.State", "State")
                        .WithMany("Adress")
                        .HasForeignKey("IdState");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Menu.Entities.Adress_C", b =>
                {
                    b.HasOne("Menu.Entities.Adress", "Adress")
                        .WithMany("Adress_C")
                        .HasForeignKey("IdAdress");

                    b.HasOne("Menu.Entities.AdressType", "AdressType")
                        .WithMany("Adress_C")
                        .HasForeignKey("IdAdress");

                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Adress_C")
                        .HasForeignKey("IdCompany");

                    b.HasOne("Menu.Entities.Person", "Person")
                        .WithMany("Adress_C")
                        .HasForeignKey("IdPerson");

                    b.Navigation("Adress");

                    b.Navigation("AdressType");

                    b.Navigation("Company");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Menu.Entities.Bill", b =>
                {
                    b.HasOne("Menu.Entities.Desk", "Desk")
                        .WithMany("Bill")
                        .HasForeignKey("IdDesk");

                    b.HasOne("Menu.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Bill")
                        .HasForeignKey("IdPaymentMethod");

                    b.HasOne("Menu.Entities.User", "User")
                        .WithMany("Bill")
                        .HasForeignKey("IdUser");

                    b.Navigation("Desk");

                    b.Navigation("PaymentMethod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Menu.Entities.Category", b =>
                {
                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Category")
                        .HasForeignKey("IdCompany");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Menu.Entities.City", b =>
                {
                    b.HasOne("Menu.Entities.Country", "Country")
                        .WithMany("City")
                        .HasForeignKey("IdCountry");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Menu.Entities.Customer", b =>
                {
                    b.HasOne("Menu.Entities.Person", "Person")
                        .WithMany("Customer")
                        .HasForeignKey("IdPerson");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Menu.Entities.Desk", b =>
                {
                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Desk")
                        .HasForeignKey("IdCompany");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Menu.Entities.Menu", b =>
                {
                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Menu")
                        .HasForeignKey("IdCompany");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Menu.Entities.MenuPackageProduct_C", b =>
                {
                    b.HasOne("Menu.Entities.Menu", "Menu")
                        .WithMany("MenuPackageProduct_C")
                        .HasForeignKey("IdMenu");

                    b.HasOne("Menu.Entities.Package", "Package")
                        .WithMany("MenuPackageProduct_C")
                        .HasForeignKey("IdPackage");

                    b.HasOne("Menu.Entities.Product", "Product")
                        .WithMany("MenuPackageProduct_C")
                        .HasForeignKey("IdProduct");

                    b.Navigation("Menu");

                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Menu.Entities.Order", b =>
                {
                    b.HasOne("Menu.Entities.Bill", "Bill")
                        .WithMany("Order")
                        .HasForeignKey("IdBill");

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Menu.Entities.OrderPackageProduct_C", b =>
                {
                    b.HasOne("Menu.Entities.Order", "Order")
                        .WithMany("OrderPackageProduct_C")
                        .HasForeignKey("IdOrder");

                    b.HasOne("Menu.Entities.MenuPackageProduct_C", "MenuPackageProduct_C")
                        .WithMany("OrderPackageProduct_C")
                        .HasForeignKey("MenuPackageProduct_CId");

                    b.Navigation("MenuPackageProduct_C");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Menu.Entities.Package", b =>
                {
                    b.HasOne("Menu.Entities.Category", "Category")
                        .WithMany("Package")
                        .HasForeignKey("IdCategory");

                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Package")
                        .HasForeignKey("IdCompany");

                    b.HasOne("Menu.Entities.SubCategory", "SubCategory")
                        .WithMany("Package")
                        .HasForeignKey("IdSubCategory");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Menu.Entities.PackageProduct_C", b =>
                {
                    b.HasOne("Menu.Entities.Package", "Package")
                        .WithMany("PackageProduct_C")
                        .HasForeignKey("IdPackage");

                    b.HasOne("Menu.Entities.Product", "Product")
                        .WithMany("PackageProduct_C")
                        .HasForeignKey("IdProduct");

                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Menu.Entities.Product", b =>
                {
                    b.HasOne("Menu.Entities.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("IdCategory");

                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("Product")
                        .HasForeignKey("IdCompany");

                    b.HasOne("Menu.Entities.SubCategory", "SubCategory")
                        .WithMany("Product")
                        .HasForeignKey("IdSubCategory");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Menu.Entities.State", b =>
                {
                    b.HasOne("Menu.Entities.City", "City")
                        .WithMany("State")
                        .HasForeignKey("IdCity");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Menu.Entities.SubCategory", b =>
                {
                    b.HasOne("Menu.Entities.Category", "Category")
                        .WithMany("SubCategory")
                        .HasForeignKey("IdCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Menu.Entities.User", b =>
                {
                    b.HasOne("Menu.Entities.Person", "Person")
                        .WithMany("User")
                        .HasForeignKey("IdPerson");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Menu.Entities.UserCompany_C", b =>
                {
                    b.HasOne("Menu.Entities.Company", "Company")
                        .WithMany("UserCompany_C")
                        .HasForeignKey("IdCompany");

                    b.HasOne("Menu.Entities.Role", "Role")
                        .WithMany("UserCompany_C")
                        .HasForeignKey("IdRole");

                    b.HasOne("Menu.Entities.User", "User")
                        .WithMany("UserCompany_C")
                        .HasForeignKey("IdUser");

                    b.Navigation("Company");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Menu.Entities.Adress", b =>
                {
                    b.Navigation("Adress_C");
                });

            modelBuilder.Entity("Menu.Entities.AdressType", b =>
                {
                    b.Navigation("Adress_C");
                });

            modelBuilder.Entity("Menu.Entities.Bill", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Menu.Entities.Category", b =>
                {
                    b.Navigation("Package");

                    b.Navigation("Product");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Menu.Entities.City", b =>
                {
                    b.Navigation("State");
                });

            modelBuilder.Entity("Menu.Entities.Company", b =>
                {
                    b.Navigation("Adress_C");

                    b.Navigation("Category");

                    b.Navigation("Desk");

                    b.Navigation("Menu");

                    b.Navigation("Package");

                    b.Navigation("Product");

                    b.Navigation("UserCompany_C");
                });

            modelBuilder.Entity("Menu.Entities.Country", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("Menu.Entities.Desk", b =>
                {
                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Menu.Entities.Menu", b =>
                {
                    b.Navigation("MenuPackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.MenuPackageProduct_C", b =>
                {
                    b.Navigation("OrderPackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.Order", b =>
                {
                    b.Navigation("OrderPackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.Package", b =>
                {
                    b.Navigation("MenuPackageProduct_C");

                    b.Navigation("PackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Menu.Entities.Person", b =>
                {
                    b.Navigation("Adress_C");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Menu.Entities.Product", b =>
                {
                    b.Navigation("MenuPackageProduct_C");

                    b.Navigation("PackageProduct_C");
                });

            modelBuilder.Entity("Menu.Entities.Role", b =>
                {
                    b.Navigation("UserCompany_C");
                });

            modelBuilder.Entity("Menu.Entities.State", b =>
                {
                    b.Navigation("Adress");
                });

            modelBuilder.Entity("Menu.Entities.SubCategory", b =>
                {
                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Menu.Entities.User", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("UserCompany_C");
                });
#pragma warning restore 612, 618
        }
    }
}
